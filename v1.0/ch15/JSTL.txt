[ JSTL (JSP Standard Tag Library) ]
: 표준 태그 라이브러리
: 핵심 기능을 캡슐화해서 JSP 태그 컬렉션 제공
: 반복문/조건문/sql 태그 지원

- 종류
1) Core: 가장 자주 사용되는 태그
2) Formatting: 날짜, 시간, 숫자 포맷 변경시 사용되는 태그
3) SQL: RDBMS에 사용하는 태그
4) XML: XML 문서 작성/조작하는 태그
5) Functions: 문자열 가공/조작 함수 제공 태그

1) Core 태그
: 프로그래밍에서 기본적으로 필요한 변수 선언, 제어문, 일반적인 로직 등의 기능 제공

Core 태그 사용하기 위해서 taglib 지시자 (directive) 선언해야 함
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>

: Core 태그 종류는 다음과 같음
<c:out>
: <%=...%> 표현식과 동일하게 jsp 페이지에 출력하는 태그

<c:set>
: 4개 영역 (page, request, session, application)의 jsp 저장소에 변수를 선언하는 태그

<c:remove>
: 4개 영역의 jsp 저장소에 변수 제거하는 태그

<c:if>
: if문과 같은 기능의 조건 선언하는 태그

<c:choose>, <c:when>, <c:otherwise>
: 다중 조건을 선언하기 위해서 사용됨
: <c:choose> 태그 안에 여러 조건을 위해서 <c:when> 태그가 여러번 사용이 가능하고
<c:when> 조건에 포함되지 않은 나머지 조건은 <c:otherwise> 태그를 사용하여 선언

<c:forEach>
: 배열이나 Collection 객체의 요소를 사용하기 위해 제공되는 태그

<c:forTokens> "하이,안녕,구트" => {"하이", "안녕", "구트"}
: StringTokenizer 클래스의 기능처럼 문자열에 구분자를 제거하고 요소를 사용하기 위해 제공되는 태그

<c:import>
: include 지시자와 같이 다른 페이지의 내용을 포함하기 위한 태그
(page 지시자의 import와는 전혀 다름)

<c:url>
: 지정한 url 링크의 기능을 제공하는 태그

<c:param>
: <c:import>와 <c:url>에서 매개변수를 선언하는 태그

<c:redirect>
: query를 포함한 지정한 url로 웹페이지가 전환되는 태그

<c:catch>
: try...catch와 같이 예외처리를 위한 태그

2) Formatting 태그
: 날짜, 시간, 숫자, 텍스트 포맷, 국제화에 따른 언어 설정 기능 제공

Formatting 태그 사용하기 위해서 taglib 지시자 (directive) 선언해야 함
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>

<fmt:requestEncoding>
: 요청 문자 인코딩 설정 태그

<fmt:setLocale>
: 사용하고자 하는 로케일 (국가, 지역) 및 언어 설정 태그

<fmt:formatNumber>
: 숫자를 원하는 문자열 형식으로 변환시키는 태그

<fmt:parseNumber>
: 문ㅇ자열을 원하는 숫자 형식으로 변환시키는 태그

<fmt:formatDate>
: 날짜 및 시간을 원하는 형식으로 출력시키는 태그

<fmt:parseDate>
: 문자열을 원하는 날짜 및 시간 형식으로 출력하는 태그

<fmt:timeZone>, <fmt:setTimeZone>
: 둘 다 원하는 시간대 설정 변수의 타임존 설정을 위한 태그
: timeZone 태그는 태그를 열고 닫는 영역에서만 적용

<fmt:bundle>
: 태그 안에서 사용할 bundle값 지정

<fmt:setBundle>
: 사용할 bundle값 지정

<fmt:message>
: 지정된 message값 반환

3) SQL 태그
: RDBMS 상호작용하는 태그 제공

SQL 태그 사용하기 위해서 taglib 지시자 (directive) 선언해야 함
<%@ taglib prefix="sql" uri="http://java.sun.com/jsp/jstl/sql"%>

<sql:setDataSource>
: DB 서버 연결 리소스 지정

<sql:query>
: 태그 안에 지정된 SQL query 실행

<sql:update>
: 태그 안에 지정된 SQL update 실행

<sql:param>
: 지정된 값으로 SQL문에서 매개변수 설정

<sql:dateParam>
: 지정된 java.util.Date의 값으로 SQL문에서 매개변수 설정

<sql:transaction>
: 트랜잭션 모든 명령문 실행

4) JSTL 함수 (JSTL Functions)
: 일반적인 문자열 조작 함수 제공함

Functions 사용하기 위해서 taglib 지시자 (directive) 선언해야 함
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>

fn:length(obj)
: obj가 문자열이면 길이 리턴, List나 Collection이면 현재 항목 개수 반환

fn:substring(str, i, j)
: str 문자열에서 i에서 j-1 까지 문자열 리턴

fn:substringAfter(str1, str2)
: str1 문자열에서 str2 문자열 이후 문자열 리턴

fn:substringBefore(str1, str2) "안녕하세요 구트아카데미"
: str1 문자열에서 str2 문자열 이전 문자열 리턴

fn:toUpperCase(str)
: str 문자열을 대문자로 리턴

fn:toLowerCase(str)
: str 문자열을 소문자로 리턴

fn:replace(str, src, dest)
: str 문자열에 있는 src 문자열을 dest로 변경한 문자열 리턴

fn:indexOf(str1, str2)
: str1 문자열에 str2로 시작된 문자열 리턴

fn:startsWith(str1, str2) str1 = "안녕하세요 구트아카데미"
: str1 문자열이 str2로 시작되면 참 (true), 아니면 거짓 (false)

fn:endsWith(str1, str2) str1 = "안녕하세요 구트아카데미"
: str1 문자열이 str2로 끝나면 참 (true), 아니면 거짓 (false)

fn:contains(str1, str2) str1 =  "안녕하세요 구트아카데미"
: str1에 str2 문자열 포함되어있으면 참 (true), 아니면 거짓 (false)

fn:containsIgnoreCase(str1, str2) str1 = "hi goott" str2 = "hi"
: str1에 str2 문자열 포함되어있으면 참 (true), 아니면 거짓 (false)
: 대소문자 무시

fn:trim(str) str = "             sss ssss                "
: str에서 양쪽 여백 제거

fn:join(arr, str2) = {"안녕", "하이"} => "안녕 하이"
: arr 배열의 각 요소 중간에 str2 문자열이 들어간 문자열 리턴

fn:escpaeXml(str)
: xml 마크업으로서 해석될 수 있는 문자를 이스케이프로 리턴